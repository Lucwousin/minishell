
Lines starting with hashtags are ignored, but printed

Lines starting with percent signs will change the environment (yes, this is confusing but $ is already in use for actual lines)

Just a string with a single variable
$abc - 2 tokens after whitespace removal
      VARIABLE - start    0 - end    3 "$abc"
  END_OF_INPUT - start    4 - end    4 ""
1 tokens after expansion/concatenation
      VARIABLE - "123"

Multiple variables after one another?!
$abc $def $ghi - 4 tokens after whitespace removal
      VARIABLE - start    0 - end    3 "$abc"
      VARIABLE - start    5 - end    8 "$def"
      VARIABLE - start   10 - end   13 "$ghi"
  END_OF_INPUT - start   14 - end   14 ""
3 tokens after expansion/concatenation
      VARIABLE - "123"
      VARIABLE - "456"
      VARIABLE - "789"

Multiple variables after one another without spaces?!
$abc$def$ghi - 4 tokens after whitespace removal
      VARIABLE - start    0 - end    3 "$abc"
      VARIABLE - start    4 - end    7 "$def"
      VARIABLE - start    8 - end   11 "$ghi"
  END_OF_INPUT - start   12 - end   12 ""
1 tokens after expansion/concatenation
      VARIABLE - "123456789"

Variable delimited by another word (starting with quotes)
$abc"def" - 5 tokens after whitespace removal
      VARIABLE - start    0 - end    3 "$abc"
        DQUOTE - start    4 - end    4 """
          WORD - start    5 - end    7 "def"
        DQUOTE - start    8 - end    8 """
  END_OF_INPUT - start    9 - end    9 ""
1 tokens after expansion/concatenation
      VARIABLE - "123def"

Variable delimited by another variable starting with a space
$abc$startspace - 3 tokens after whitespace removal
      VARIABLE - start    0 - end    3 "$abc"
      VARIABLE - start    4 - end   14 "$startspace"
  END_OF_INPUT - start   15 - end   15 ""
2 tokens after expansion/concatenation
      VARIABLE - "123"
      VARIABLE - "bye"

Variable delimited by another variable not starting with a sapce
hey$endspace - 3 tokens after whitespace removal
          WORD - start    0 - end    2 "hey"
      VARIABLE - start    3 - end   11 "$endspace"
  END_OF_INPUT - start   12 - end   12 ""
1 tokens after expansion/concatenation
      VARIABLE - "heyhi"

Variable with a space on the end delimited by another word
$endspace"hi" - 5 tokens after whitespace removal
      VARIABLE - start    0 - end    8 "$endspace"
        DQUOTE - start    9 - end    9 """
          WORD - start   10 - end   11 "hi"
        DQUOTE - start   12 - end   12 """
  END_OF_INPUT - start   13 - end   13 ""
2 tokens after expansion/concatenation
      VARIABLE - "hi"
          WORD - "hi"

Variable with a space, quoted
"$startspace" - 4 tokens after whitespace removal
        DQUOTE - start    0 - end    0 """
      VARIABLE - start    1 - end   11 "$startspace"
        DQUOTE - start   12 - end   12 """
  END_OF_INPUT - start   13 - end   13 ""
1 tokens after expansion/concatenation
      VARIABLE - " bye"

Word with variable starting with space
hey$startspace - 3 tokens after whitespace removal
          WORD - start    0 - end    2 "hey"
      VARIABLE - start    3 - end   13 "$startspace"
  END_OF_INPUT - start   14 - end   14 ""
2 tokens after expansion/concatenation
      VARIABLE - "hey"
      VARIABLE - "bye"

Word with variable starting with space (quoted)
"hey$startspace" - 5 tokens after whitespace removal
        DQUOTE - start    0 - end    0 """
          WORD - start    1 - end    3 "hey"
      VARIABLE - start    4 - end   14 "$startspace"
        DQUOTE - start   15 - end   15 """
  END_OF_INPUT - start   16 - end   16 ""
1 tokens after expansion/concatenation
          WORD - "hey bye"

Redirections?!
< in > out << heredoc << "quoted" >> append - 13 tokens after whitespace removal
      OPERATOR - start    0 - end    0 "<"
          WORD - start    2 - end    3 "in"
      OPERATOR - start    5 - end    5 ">"
          WORD - start    7 - end    9 "out"
      OPERATOR - start   11 - end   12 "<<"
          WORD - start   14 - end   20 "heredoc"
      OPERATOR - start   22 - end   23 "<<"
        DQUOTE - start   25 - end   25 """
          WORD - start   26 - end   31 "quoted"
        DQUOTE - start   32 - end   32 """
      OPERATOR - start   34 - end   35 ">>"
          WORD - start   37 - end   42 "append"
  END_OF_INPUT - start   43 - end   43 ""
5 tokens after expansion/concatenation
        RED_IN - "in"
       RED_OUT - "out"
        RED_HD - "heredoc"
      RED_HD_Q - "quoted"
       RED_APP - "append"

Redirections with no space?! (this is legal bash syntax)
<in>out<<heredoc<<"quoted">>append - 13 tokens after whitespace removal
      OPERATOR - start    0 - end    0 "<"
          WORD - start    1 - end    2 "in"
      OPERATOR - start    3 - end    3 ">"
          WORD - start    4 - end    6 "out"
      OPERATOR - start    7 - end    8 "<<"
          WORD - start    9 - end   15 "heredoc"
      OPERATOR - start   16 - end   17 "<<"
        DQUOTE - start   18 - end   18 """
          WORD - start   19 - end   24 "quoted"
        DQUOTE - start   25 - end   25 """
      OPERATOR - start   26 - end   27 ">>"
          WORD - start   28 - end   33 "append"
  END_OF_INPUT - start   34 - end   34 ""
5 tokens after expansion/concatenation
        RED_IN - "in"
       RED_OUT - "out"
        RED_HD - "heredoc"
      RED_HD_Q - "quoted"
       RED_APP - "append"

Redirections with variables n shit
<< "$file" - 5 tokens after whitespace removal
      OPERATOR - start    0 - end    1 "<<"
        DQUOTE - start    3 - end    3 """
      VARIABLE - start    4 - end    8 "$file"
        DQUOTE - start    9 - end    9 """
  END_OF_INPUT - start   10 - end   10 ""
1 tokens after expansion/concatenation
      RED_HD_Q - "$file"

What happens if I add more quotes?
<< '"$file"' - 7 tokens after whitespace removal
      OPERATOR - start    0 - end    1 "<<"
        SQUOTE - start    3 - end    3 "'"
          WORD - start    4 - end    4 """
      VARIABLE - start    5 - end    9 "$file"
          WORD - start   10 - end   10 """
        SQUOTE - start   11 - end   11 "'"
  END_OF_INPUT - start   12 - end   12 ""
1 tokens after expansion/concatenation
      RED_HD_Q - ""$file""

What happens if I add more quotes (with expansion)?
<< "'$file'" - 7 tokens after whitespace removal
      OPERATOR - start    0 - end    1 "<<"
        DQUOTE - start    3 - end    3 """
          WORD - start    4 - end    4 "'"
      VARIABLE - start    5 - end    9 "$file"
          WORD - start   10 - end   10 "'"
        DQUOTE - start   11 - end   11 """
  END_OF_INPUT - start   12 - end   12 ""
1 tokens after expansion/concatenation
      RED_HD_Q - "'$file'"

Redirection syntax error
>> | - 3 tokens after whitespace removal
      OPERATOR - start    0 - end    1 ">>"
      OPERATOR - start    3 - end    3 "|"
  END_OF_INPUT - start    4 - end    4 ""
handle input exited with status 2 for >> |

Redirection syntax error 2
>> - 2 tokens after whitespace removal
      OPERATOR - start    0 - end    1 ">>"
  END_OF_INPUT - start    2 - end    2 ""
handle input exited with status 2 for >>

Redirection to a variable?
> $abc - 3 tokens after whitespace removal
      OPERATOR - start    0 - end    0 ">"
      VARIABLE - start    2 - end    5 "$abc"
  END_OF_INPUT - start    6 - end    6 ""
1 tokens after expansion/concatenation
       RED_OUT - "123"

How many words will this be?
$abc'$def'$ghi"$def"herlo$abc - 11 tokens after whitespace removal
      VARIABLE - start    0 - end    3 "$abc"
        SQUOTE - start    4 - end    4 "'"
      VARIABLE - start    5 - end    8 "$def"
        SQUOTE - start    9 - end    9 "'"
      VARIABLE - start   10 - end   13 "$ghi"
        DQUOTE - start   14 - end   14 """
      VARIABLE - start   15 - end   18 "$def"
        DQUOTE - start   19 - end   19 """
          WORD - start   20 - end   24 "herlo"
      VARIABLE - start   25 - end   28 "$abc"
  END_OF_INPUT - start   29 - end   29 ""
1 tokens after expansion/concatenation
      VARIABLE - "123$def789456herlo123"

Exit status!
$? $?hello - 4 tokens after whitespace removal
      VARIABLE - start    0 - end    1 "$?"
      VARIABLE - start    3 - end    4 "$?"
          WORD - start    5 - end    9 "hello"
  END_OF_INPUT - start   10 - end   10 ""
2 tokens after expansion/concatenation
      VARIABLE - "0"
      VARIABLE - "0hello"
